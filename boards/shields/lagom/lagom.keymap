#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 140 
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        gresc_shift: grave_escape_shift {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&mt MOD_LSFT GRAVE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        gresc_ctrl: grave_escape_ctrl {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&gresc_shift>, <&kp GRAVE>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        bspc_shift: backspace_shift {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&mt MOD_LSFT DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        bspc_ctrl: backspace_ctrl {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&bspc_shift>, <&kp DELETE>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
	        compatible = "zmk,behavior-sensor-rotate";
	        #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;
            tap-ms = <20>;
        };
        scroll_tabs: behavior_sensor_scroll_tabs_left_right {
            compatible = "zmk,behavior-sensor-rotate";
	        #sensor-binding-cells = <0>;
            bindings = <&kp LC(PG_DN)>, <&kp LC(PG_UP)>;
        };
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1 &encoder_2>;
        triggers-per-rotation = <20>;
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default";

            sensor-bindings = <&scroll_up_down &inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;

            bindings = <
            &gresc_ctrl      &kp N1    &kp N2    &kp N3  &kp N4  &kp N5  &kp N6     &kp N7  &kp N8     &kp N9    &kp N0     &kp MINUS   &kp EQUAL   &none &bspc_ctrl   &kp HOME
            &kp TAB          &kp Q     &kp W     &kp E   &kp R   &kp T   &kp Y      &kp U   &kp I      &kp O     &kp P      &kp LBKT    &kp RBKT          &kp BSLH     &kp END        &caps_word // left encoder button
            &kp CAPS         &kp A     &kp S     &kp D   &kp F   &kp G   &kp H      &kp J   &kp K      &kp L     &kp SEMI   &kp SQT     &none &kp RET                  &kp PAGE_UP    &kp C_MUTE // right encoder button
            &kp LSHFT &none  &kp Z     &kp X     &kp C   &kp V   &kp B   &kp N      &kp M   &kp COMMA  &kp DOT   &kp FSLH   &kp RSHFT                     &kp UP       &kp PAGE_DOWN
            &kp LCTRL        &kp LGUI  &kp LALT          &none           &kp SPACE          &none      &kp RGUI  &mo 1                          &kp LEFT  &kp DOWN     &kp RIGHT
            >;
        };

        fn_layer {
            display-name = "Function";

            sensor-bindings = <&scroll_tabs &inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;

            bindings = <
            &trans           &kp F1    &kp F2    &kp F3  &kp F4  &kp F5  &kp F6     &kp F7  &kp F8     &kp F9    &kp F10    &kp F11     &kp F12      &none &trans      &bootloader
            &trans           &trans    &trans    &trans  &trans  &trans  &trans     &trans  &trans     &trans    &kp PSCRN  &bt BT_PRV  &bt BT_NXT         &bt BT_CLR  &out OUT_TOG   &trans
            &trans           &trans    &trans    &trans  &trans  &trans  &trans     &trans  &trans     &trans    &trans     &trans      &none &trans                   &sys_reset     &trans
            &trans &none     &trans    &trans    &trans  &trans  &trans  &trans     &trans  &trans     &trans    &trans     &trans                         &trans      &ext_power EP_TOG
            &trans           &trans    &trans            &none           &trans             &none      &trans    &trans                         &trans     &trans      &trans
            >;
        };
    };
};
